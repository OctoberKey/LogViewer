<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:LogViewer">

    <Style TargetType="{x:Type local:HighLightImageButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HighLightImageButton}">
                    <Border x:Name="Border" Style="{TemplateBinding BorderStyle}">
                        <Image x:Name="Image" 
                               Source="{TemplateBinding ImageSource}" 
                               Width="{TemplateBinding ImageWidth}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter 
                                Property="Background"  
                                TargetName="Border" 
                                Value="{Binding Path=HighlightBrush, RelativeSource={RelativeSource AncestorType={x:Type local:HighLightImageButton}}}"/>
                            <Setter 
                                Property="Source"
                                TargetName="Image" 
                                Value="{Binding Path=HighlightImage,RelativeSource={RelativeSource AncestorType={x:Type local:HighLightImageButton}}}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ImageCheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageCheckBox}">
                    <Border Style="{TemplateBinding BorderStyle}">
                        <Image x:Name="Image" 
                               Source="{TemplateBinding CheckedImage}" 
                               ToolTip="{TemplateBinding CheckedToolTip}"
                               Width="{TemplateBinding ImageWidth}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Image" 
                                    Property="Source" 
                                    Value="{Binding Path=UnCheckedImage, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter TargetName="Image"
                                    Property="ToolTip"
                                    Value="{Binding Path=UnCheckedToolTip, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                            <Setter TargetName="Image"
                                    Property="Width"
                                    Value="{Binding Path=ImageWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LinkButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LinkButton}">
                    <Label x:Name="Label" 
                           Foreground="{TemplateBinding Foreground}" 
                           Content="{TemplateBinding Content}" 
                           ToolTip="{TemplateBinding ToolTip}"></Label>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter 
                                Property="Foreground"  
                                TargetName="Label" 
                                Value="{Binding Path=HighlightBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

